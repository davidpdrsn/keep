
==================== FINAL INTERFACE ====================
2015-11-14 12:43:19.346581 UTC

interface main@main:Main 7102
  interface hash: 76c7dca7018eac22d40061e900662163
  ABI hash: fdf4cd2db597bc2592a9456318de53f4
  export-list hash: f62b0622da74886b6e472290230e8856
  orphan hash: f9290fe7086a13c828a1c40d19a547d7
  flag hash: 0e88fe467c5c72588ac1500b13eb626b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.createList
  Main.ifM
  Main.insertPairToList
  Main.keepPath
  Main.listNames
  Main.loadKeep
  Main.main
  Main.pairsInList
  Main.persistKeep
  Main.runKeepCommand
  Main.showHelp
  Main.Keep
module dependencies:
package dependencies: aeson-0.8.0.2@aeson_EuKT6VLihZ5IOeoLWhB2pn
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.12.1.6@attop_DspwQCeZhqd768dqqECCEZ base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      directory-1.2.2.0@direc_KowvXytSqazBcvN7MGpFtg
                      dlist-0.7.1.2@dlist_7AixcwRWCwX32HiPCcE7zz
                      filepath-1.4.0.0@filep_KsGE6pHE5eZHSN90ZVax6A ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.2@scien_4y53jPjKCJD6UICjmI9WaH
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      unix-2.7.1.0@unix_A3WgcI5QiHK4PDo4jSYdwQ
                      unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a
                      vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ
orphans: aeson-0.8.0.2@aeson_EuKT6VLihZ5IOeoLWhB2pn:Data.Aeson.Types.Generic
         aeson-0.8.0.2@aeson_EuKT6VLihZ5IOeoLWhB2pn:Data.Aeson.Types.Instances
         attoparsec-0.12.1.6@attop_DspwQCeZhqd768dqqECCEZ:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Format.Parse
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Fusion.Stream
         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.12.1.6@attop_DspwQCeZhqd768dqqECCEZ:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         dlist-0.7.1.2@dlist_7AixcwRWCwX32HiPCcE7zz:Data.DList
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashSet
                         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector
                         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Primitive
                         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Storable
                         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Unboxed
                         vector-0.10.12.3@vecto_JrQt7SYKOQF2foH4Ugm8MQ:Data.Vector.Unboxed.Base
import  -/  aeson-0.8.0.2@aeson_EuKT6VLihZ5IOeoLWhB2pn:Data.Aeson 9e250551aba83ef62dfb8447f922caf4
import  -/  aeson-0.8.0.2@aeson_EuKT6VLihZ5IOeoLWhB2pn:Data.Aeson.Encode.ByteString 283980a8a2322260b4313c26f6ff7d7a
import  -/  base-4.8.1.0:Control.Monad dfea142d91349c4861427789d50d5b80
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.1.0:Data.List 2a4f5f92892d432e7113f64cd9dcca53
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.OldList 21f46c368c20a00483b41333e53a55cb
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.IO c40fa9051eafbe02c69624c2ae0f498f
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.Environment 946ddc2d7c48138bb213316abaff2a8d
import  -/  base-4.8.1.0:System.IO 29a6f3d7c8ad8a4e6200d8bbb6e70aae
import  -/  bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Lazy.Char8 c8f0eb29ad81a39f0567b5f8bca81ed3
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map 5e4cbf1ca2e6c8cfaecf2b4e95371357
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base 7ea108dc1481cad0b32efe810e49ad43
import  -/  directory-1.2.2.0@direc_KowvXytSqazBcvN7MGpFtg:System.Directory 1cb70a6f60c649899d068e270409e973
import  -/  filepath-1.4.0.0@filep_KsGE6pHE5eZHSN90ZVax6A:System.FilePath f4cffd7704c4bbe79880b28e84a9b24d
import  -/  filepath-1.4.0.0@filep_KsGE6pHE5eZHSN90ZVax6A:System.FilePath.Posix 21938741ac31651631a60d9842b1d5bf
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
7413e15ea449748b03fe7145960ba817
  $s$fEqMap ::
    GHC.Classes.Eq
      (Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char])
                  (Data.Map.Base.$fEqMap_$c==
                     @ [GHC.Types.Char]
                     @ [GHC.Types.Char]
                     Main.$s$fEqMap1
                     Main.$s$fEqMap1)
                  Main.$s$fEqMap_$s$fEqMap_$c/= -}
7444512ecda3c6342c4e52d585958005
  $s$fEqMap1 :: GHC.Classes.Eq [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
d0c4c172de69d0033d1acc7ffbf6e6b6
  $s$fEqMap_$s$fEqMap_$c/= ::
    Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char]
    -> Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char]
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ x :: Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char]
                   y :: Data.Map.Base.Map [GHC.Types.Char] [GHC.Types.Char] ->
                 GHC.Classes.not
                   (Data.Map.Base.$fEqMap_$c==
                      @ [GHC.Types.Char]
                      @ [GHC.Types.Char]
                      Main.$s$fEqMap1
                      Main.$s$fEqMap1
                      x
                      y)) -}
168fec44956e71031fd3ea1d6c828be2
  $sdecode3 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Data.Map.Base.Map GHC.Base.String [GHC.Types.Char])
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.Instances.$fFromJSONMap_$cparseJSON
                   @ [GHC.Types.Char]
                   Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <[GHC.Types.Char]>_N))) -}
d471b6edb2d338cd0353d0273aed43e7
  $sencode3 ::
    Data.Map.Base.Map GHC.Base.String [GHC.Types.Char]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ w1 :: Data.Map.Base.Map GHC.Base.String [GHC.Types.Char] ->
                 case Data.Aeson.Types.Instances.$w$ctoJSON2
                        @ [GHC.Types.Char]
                        Data.Aeson.Types.Instances.$fToJSON[]0_$ctoJSON
                          `cast`
                        (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0] <[GHC.Types.Char]>_N))
                        w1 of ww { (##) ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
372af40b6af63e1a98fe95ed6387ab93
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
0a262e54e25f3f66872ae9ac61879537
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
753df1638cf56e6b153e44fa8033f68d
  type Keep =
    Data.Map.Base.Map
      GHC.Base.String (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
1bfc5ca42a575692e34144894681148d
  createList :: GHC.Base.String -> Main.Keep -> Main.Keep
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ name :: GHC.Base.String
                   eta2 :: Data.Map.Base.Map
                             GHC.Base.String
                             (Data.Map.Base.Map GHC.Base.String GHC.Base.String) ->
                 Main.$sinsert_$sgo10
                   @ (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
                   name
                   (Data.Map.Base.Tip @ GHC.Base.String @ GHC.Base.String)
                   eta2) -}
aaca48987f2b2e45478f1964ad7a1c89
  ifM :: GHC.Base.Monad m => m GHC.Types.Bool -> m a -> m a -> m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),1*U(A,1*C1(C1(U)),A,A,A)><L,U><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ (m :: * -> *)
                   @ a3
                   $dMonad :: GHC.Base.Monad m
                   m1 :: m GHC.Types.Bool
                   t :: m a3
                   e :: m a3 ->
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ GHC.Types.Bool
                   @ a3
                   m1
                   (\ x :: GHC.Types.Bool ->
                    case x of wild { GHC.Types.False -> e GHC.Types.True -> t })) -}
990ad56015c22ae005f054a77ec82a45
  insertPairToList ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Main.Keep -> Main.Keep
  {- Arity: 4, Strictness: <L,1*U><L,U><S,U><S,U> -}
be5232f5223076f27d574597eebe23fc
  keepPath :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.keepPath1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.FilePath>_R)) -}
2fa9f0da347599568baf0ef6b9200aa4
  keepPath1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        System.Directory.getHomeDirectory4
                        System.Directory.getHomeDirectory2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    System.FilePath.Posix.joinPath_go
                      (GHC.Types.:
                         @ GHC.IO.FilePath
                         ipv1
                         (GHC.Types.:
                            @ GHC.IO.FilePath
                            Main.keepPath2
                            (GHC.Types.[] @ GHC.IO.FilePath))) #) }) -}
5f20095afa2ebbb692ad368bc20829e7
  keepPath2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ".keep.json"#) -}
41f9e08b341a79edd36d9e69e0d504e2
  listNames :: Main.Keep -> [GHC.Base.String]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (Data.Map.Base.keys
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Base.String GHC.Base.String)) -}
4a2f0a7033def0659b458437eb950ef6
  loadKeep :: GHC.Types.IO Main.Keep
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.loadKeep1 `cast` (Sym (GHC.Types.NTCo:IO[0] <Main.Keep>_R)) -}
43c13ef3689e1070113de011c218c9b3
  loadKeep1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Keep #)
  {- Arity: 1, Strictness: <L,U> -}
fc9097bcd599792edceb82d72459d785
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
3730d74a445cee9090b65a1429fb4da9
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case Main.loadKeep1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Main.main5 ipv1 ipv3 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Main.main4 ipv3 ipv5 of wild {
                   GHC.Types.False -> Main.main2 ipv5 ipv4
                   GHC.Types.True -> (# ipv4, GHC.Tuple.() #) } } } }) -}
7707d60b1bd66e6dbf113699e638ab66
  main2 ::
    Main.Keep
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ keep :: Main.Keep
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        System.Directory.getHomeDirectory4
                        System.Directory.getHomeDirectory2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Data.ByteString.Lazy.Char8.writeFile1
                        (System.FilePath.Posix.joinPath_go
                           (GHC.Types.: @ GHC.IO.FilePath ipv1 Main.main3))
                        (Data.ByteString.Builder.toLazyByteString
                           (case Data.Aeson.Types.Instances.$w$ctoJSON2
                                   @ (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
                                   Main.$sencode3
                                     `cast`
                                   (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0]
                                             <Data.Map.Base.Map
                                                GHC.Base.String [GHC.Types.Char]>_N))
                                   keep of ww { (##) ww1 ->
                            Data.Aeson.Encode.ByteString.encodeToByteStringBuilder
                              (Data.Aeson.Types.Internal.Object ww1) }))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2, GHC.Tuple.() #) } }) -}
9b05b93740f12e22f22e8df8deed8e79
  main3 :: [GHC.IO.FilePath]
  {- Unfolding: (GHC.Types.:
                   @ GHC.IO.FilePath
                   Main.keepPath2
                   (GHC.Types.[] @ GHC.IO.FilePath)) -}
40933fb0d27565dcd169088465a4eddd
  main4 ::
    Data.Map.Base.Map
      [GHC.Types.Char]
      (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
    -> Data.Map.Base.Map
         [GHC.Types.Char]
         (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
    -> GHC.Types.Bool
  {- Unfolding: (Data.Map.Base.$fEqMap_$c==
                   @ [GHC.Types.Char]
                   @ (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   Main.$s$fEqMap) -}
ada90f8f689e164591ee58179cc3fb27
  main5 ::
    [GHC.Base.String]
    -> Main.Keep
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Keep #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U> -}
a337f96a6893201631ab60e7ec927832
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
23139c971740eabeb77901ae9513dcf8
  pairsInList ::
    GHC.Base.String
    -> Main.Keep -> GHC.Base.Maybe [(GHC.Base.String, GHC.Base.String)]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ listName :: GHC.Base.String keep :: Main.Keep ->
                 case Main.$slookup1
                        @ (Data.Map.Base.Map GHC.Base.String GHC.Base.String)
                        listName
                        keep of wild {
                   GHC.Base.Nothing
                   -> GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)]
                   GHC.Base.Just a3
                   -> GHC.Base.Just
                        @ [(GHC.Base.String, GHC.Base.String)]
                        (GHC.Base.build
                           @ ([GHC.Types.Char], [GHC.Types.Char])
                           (\ @ b
                              c :: ([GHC.Types.Char], [GHC.Types.Char]) -> b -> b[OneShot]
                              n :: b[OneShot] ->
                            Data.Map.Base.foldrFB
                              @ [GHC.Types.Char]
                              @ [GHC.Types.Char]
                              @ b
                              (\ k1 :: [GHC.Types.Char]
                                 x :: [GHC.Types.Char][OneShot]
                                 xs :: b[OneShot] ->
                               c (k1, x) xs)
                              n
                              a3)) }) -}
cfa684c43630e000753600f8717c31d7
  persistKeep :: Main.Keep -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<Main.Keep>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
3f63dd4b81cdb2ab83d5a42dda625fbe
  runKeepCommand ::
    [GHC.Base.String] -> Main.Keep -> GHC.Types.IO Main.Keep
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main5
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R <Main.Keep>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <Main.Keep>_R)) -}
78e34bf488c3e64644adad0b4b20d8e0
  showHelp :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.showHelp1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
540c43539c5576621f1e7d054433b79f
  showHelp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.showHelp2
                   GHC.Types.True
                   eta) -}
7dbdac62906f139b6d817a19e579b6e8
  showHelp10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "  Make a new list: keep <list name>"#) -}
b006d74d77aad2e96004c5989c6b7e19
  showHelp11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "  Show all lists: keep"#) -}
e7d48a516ae4ec87abd00f23e4a08dd2
  showHelp12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
8424809fc0694ef3032f9ab60b575aae
  showHelp13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Usage:"#) -}
38ec9571847c110cd0ae4521871ccb27
  showHelp2 :: [GHC.Types.Char]
  {- Unfolding: (Data.OldList.intercalate_$spoly_go
                   @ GHC.Types.Char
                   Main.showHelp13
                   Main.showHelp3) -}
3739b38ab30aff89b1b3faa233580394
  showHelp3 :: [[GHC.Types.Char]]
  {- Unfolding: (Data.OldList.prependToAll
                   @ [GHC.Types.Char]
                   Main.showHelp12
                   Main.showHelp4) -}
c311e16cdb5672505d10add466263d73
  showHelp4 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.showHelp11
                   Main.showHelp5) -}
230f4bd6f2bb384d3abdded0511bab08
  showHelp5 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.showHelp10
                   Main.showHelp6) -}
9aab5bc85985cc8e612e3ab957f9494d
  showHelp6 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.showHelp9
                   Main.showHelp7) -}
c4d41cc3b908bbee494743a285e9bc1d
  showHelp7 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.showHelp8
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
108b8f6f317e5eb3f6a848cb345f2a46
  showHelp8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "  Add to list: keep <list name> <key> <value>"#) -}
7c5e62cf05ecfb7957fa9beb5d75cebc
  showHelp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "  Get key in list: keep <list name> <key>"#) -}
"SPEC/Main $fEqMap @ [Char] @ [Char]" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                [GHC.Types.Char]
                                                      $dEq1 :: GHC.Classes.Eq [GHC.Types.Char]
  Data.Map.Base.$fEqMap @ [GHC.Types.Char]
                        @ [GHC.Types.Char]
                        $dEq
                        $dEq1
  = Main.$s$fEqMap
"SPEC/Main $fEqMap_$c/= @ [Char] @ [Char]" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                     [GHC.Types.Char]
                                                           $dEq1 :: GHC.Classes.Eq [GHC.Types.Char]
  Data.Map.Base.$fEqMap_$c/= @ [GHC.Types.Char]
                             @ [GHC.Types.Char]
                             $dEq
                             $dEq1
  = Main.$s$fEqMap_$s$fEqMap_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

